name: Storybook Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: dotenv
        uses: xom9ikk/dotenv@v2
        with:
          mode: test
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - run: |
          echo "PLAYWRIGHT_VERSION=$(node -e "process.stdout.write(require('@playwright/test/package.json').version)")" >> $GITHUB_OUTPUT
        id: playwright-version

      - uses: actions/cache@v3
        id: playwright-cache
        with:
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

      - name: Install Playwright
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright with cache
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Build Storybook
        run: npm run build-storybook --quiet

      - name: Serve Storybook and run tests
        run: |
         npx concurrently -k -s first -n "SB,TEST" -c "magenta,green" \
         "npx http-server storybook-static --port 6006 --silent" \
         "npx wait-on tcp:127.0.0.1:6006 -l && npm run test-storybook"
