name: Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  jest:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: dotenv
      uses: xom9ikk/dotenv@v2
      with:
        mode: test
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - id: cache
      name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --ignore-scripts
    - name: Run Jest tests
      run: npx jest
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: jest-report
        path: src/.jest/coverage
        retention-days: 30
  storybook:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: dotenv
        uses: xom9ikk/dotenv@v2
        with:
          mode: test
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright/
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Install Playwright dependencies
        run: npx playwright install --with-deps

      - name: Build Storybook
        run: npm run build-storybook --quiet

      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,green" \
          "npx http-server storybook-static --port 6006 --silent" \
          "npx wait-on tcp:127.0.0.1:6006 -l && npm run test-storybook"
